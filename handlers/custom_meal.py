from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.utils import markdown
from create_entities import dp
from keyboards import *

from states import CustomMealState
from utils import nutrits_counter


@dp.message(F.text.lower().startswith('–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—ë –±–ª—é–¥–æ'))
async def custom_meal_handler(message: types.Message, state: FSMContext):
    await state.set_state(CustomMealState.recipe)
    await message.answer(
        text=markdown.text('- ‚úç üßæ –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –≤–∞—à–µ–≥–æ –±–ª—é–¥–∞ –∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã. ü•íü•¶üßÖü´òü•©\n',
                           '- –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏ –Ω–µ –∏–∑ —Ä–∞–∑—Ä—è–¥–∞ –ª–æ–±—Å—Ç–µ—Ä–æ–≤ –∏ —Ç.–¥. üçñ üßÄ\n',
                           '- üßæ –í–∞—à —Ä–µ—Ü–µ–ø—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –Ω–∞ –∫—É—Ö–Ω—é. –¢–∞–º —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω, —Ç–æ –æ–Ω –±—É–¥–µ—Ç —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å–≤–∞–Ω–∏–∏ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª—é–¥ –≤ –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∏ –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞. üìã üìä\n',
                           sep = '\n',
                           )
    )


@dp.message(CustomMealState.recipe)
async def custom_meal_recipe_handler(message: types.Message, state: FSMContext):
    data = await state.update_data(recipe=message.text)
    recipe = data['recipe']
    print(recipe)
    await state.clear()
    data = nutrits_counter(recipe).split('\n')
    try:
        callories = f'- ü•ò {data[0]}'
        fats = f'- üßÄ {data[1]}'
        proteins = f'- ü•© {data[2]}'
        carbohydrates = f'- üçî {data[3]}'
        await message.answer(
            text=markdown.text(
                '–ö–ë–ñ–£ –≤–∞—à–µ–≥–æ –±–ª—é–¥–∞ –Ω–∞ 100 –≥ –ø—Ä–æ–¥—É–∫—Ç–∞:',
                f'{callories}',
                f'{fats}',
                f'{proteins}',
                f'{carbohydrates}\n',
                'ü•ò –í–∞—à–µ –±–ª—é–¥–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏. ‚úÖ\n',
                'üßæ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à —Ä–µ—Ü–µ–ø—Ç –æ–¥–æ–±—Ä—è—Ç, –≤—ã –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ. üì®\n',
                '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç–µ –Ω–∞—Å –ª—É—á—à–µ! üôè üåü\n',
                sep='\n'
            ),
        )
    except Exception:
        callories = f'- ü•ò –ö–∞–ª–æ—Ä–∏–∏: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏'
        fats = f'- üßÄ –ñ–∏—Ä—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏'
        proteins = f'- ü•© –ë–µ–ª–∫–∏: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏'
        carbohydrates = f'- üçî –£–≥–ª–µ–≤–æ–¥—ã: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏'
        await message.answer(
            text=markdown.text(
                '–ö–ë–ñ–£ –≤–∞—à–µ–≥–æ –±–ª—é–¥–∞ –Ω–∞ 100 –≥ –ø—Ä–æ–¥—É–∫—Ç–∞:',
                f'{callories}',
                f'{fats}',
                f'{proteins}',
                f'{carbohydrates}\n',
                '–ü–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫(. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –±–ª—é–¥–∞ –∏ –≤–≤–µ—Å—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –µ—â–µ —Ä–∞–∑. üßæ ‚úç\n',
                sep='\n'
            ),
        )