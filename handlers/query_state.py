from aiogram import types, F
from aiogram.utils import markdown
from create_entities import *
from misc import *


def create_offices_keyboard():
    buttons = [
        [types.InlineKeyboardButton(text='–ê–¥—Ä–µ—Å 1', callback_data=f'office_1')],
        [types.InlineKeyboardButton(text='–ê–¥—Ä–µ—Å 2', callback_data=f'office_2')],
        [types.InlineKeyboardButton(text='–ê–¥—Ä–µ—Å 3', callback_data=f'office_3')],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

@dp.message(F.text.lower().startswith('—Ö–æ—á—É –ø–æ–ª—É—á–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è'))
async def office_choice_handler(message: types.Message):
    await message.answer(
        text=markdown.text('–í—ã–±–µ—Ä–∏—Ç–µ –∑–¥–∞–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç–µ üë®‚Äçüíª :'),
        reply_markup=create_offices_keyboard()
    )


@dp.callback_query(F.data.startswith('office'))
async def query_state_handler(message: types.Message):
    await message.answer(
        text=markdown.text('–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –æ—á–µ—Ä–µ–¥–∏. ‚úÖ')
    )
